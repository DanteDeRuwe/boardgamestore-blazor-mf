@using BoardgameStore.Order.Repositories
@using BoardgameStore.Order.Entities
@using BoardgameStore.Order.Context

@attribute [Fragment("game-actions")]

@inject IGameRepository GameRepository
@inject ICartRepository CartRepository
@inject CartContext CartContext

@if (!_inCart)
{
    <button class="btn btn-outline-success" @onclick="AddGameToCart">
        <span class="oi oi-cart" aria-hidden="true"></span>
        Add to cart
    </button>
}
else
{
    <p class="py-2 mb-0 text-success">
        <span class="oi oi-check" aria-hidden="true"></span>
        Added to cart
    </p>
}

@code{

    [Parameter]
    public int GameId { get; set; }

    private Game _game = default!;
    private bool _inCart;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _game = GameRepository.GetBy(GameId);
        _inCart = CartRepository.HasGame(_game);
    }

    private void AddGameToCart()
    {
        CartRepository.AddGame(_game);
        CartContext.CartUpdated.Invoke();
        _inCart = true;
    }
}
